% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unglue.R
\name{unglue_unnest}
\alias{unglue_unnest}
\title{unglue a column and unnest it}
\usage{
unglue_unnest(data, var, patterns, open = "{", close = "}",
  convert = TRUE, keep = TRUE)
}
\arguments{
\item{data}{a data frame}

\item{var}{the unquoted name of the column to unglue and unnest}

\item{patterns}{a character vector or a list of character vectors, if a list,
items will be with a \code{""} separator.}

\item{open}{The opening delimiter.}

\item{close}{The closing delimiter.}

\item{convert}{convert columns of output using \code{utils::type.convert()}}

\item{keep}{wether to keep the original text column}
}
\value{
a data frame with the same attributes as the input (apart from names)
}
\description{
\code{unglue_unnest()} extracts variables as new columns of the input data frame.
}
\details{
\code{unnest(data, var, patterns)} is similar to
\code{dplyr::mutate(data, unglued = unglue(var, patterns)) \%>\% tidyr::unnest()}
using tidyverse packages but is more compact and dependence free
}
\examples{
facts <- c("Antarctica is the largest desert in the world!",
  "The largest country in Europe is Russia!",
  "The smallest country in Europe is Vatican!",
  "Disneyland is the most visited place in Europe! Disneyland is in Paris!",
  "The largest island in the world is Green Land!")
facts_df <- data.frame(id = 1:5, facts)
patterns <- c("The {adjective} {place_type} in {bigger_place} is {place}!",
            "{place} is the {adjective} {place_type=[^ ]+} in {bigger_place}!{=.*}")
unglue_unnest(facts_df, facts, patterns)
unglue_unnest(facts_df, facts, patterns, keep = FALSE)
}
\seealso{
unglue, unglue_data
}
